{"version":3,"sources":["TodoItem.js","Todos.js","Header.js","TodoNew.js","About.js","App.js","index.js"],"names":["TodoItem","react_default","a","createElement","className","this","props","todo","title","complete","String","content","onClick","changeTodoStatus","bind","id","deleteTodo","style","fontFamily","fontSize","color","backgroundColor","Date","Component","Todos","_this","todos","map","src_TodoItem","key","linkButton","Header","Fragment","marginBottom","react_router_dom","to","TodoNew","state","submit","e","preventDefault","todoData","setState","document","getElementById","value","alert","change","Object","defineProperty","target","name","onSubmit","required","onChange","type","About","App","toConsumableArray","filter","t","data","console","log","newTodo","uuid","v4","concat","_this2","src_Header","react_router","exact","path","render","src_TodoNew","src_Todos","component","ReactDOM","src_App"],"mappings":"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","file":"static/js/main.501c6a3a.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoItem extends Component {\n\n    render (){\n        return (\n            <div className=\"notification is-dark\">\n                <div className=\"content\">\n                    <h5 className=\"title\">{this.props.todo.title}</h5>\n                    <p className={this.props.todo.complete ? 'tag is-success' : 'tag is-light'}>Completed: {String(this.props.todo.complete)}</p>\n                    <p>{this.props.todo.content}</p>\n                \n                    <p className=\"buttons\">\n                        <button onClick={this.props.changeTodoStatus.bind(this, this.props.todo.id)} className=\"button is-small is-outlined is-light\">Toggle Status</button>\n                        <button onClick={this.props.deleteTodo.bind(this, this.props.todo.id)} className=\"button is-small is-outlined is-danger\">Delete this Todo</button>\n                    </p>\n                    <p style={{ fontFamily: 'monospace', fontSize: '0.75rem', color:'light grey', backgroundColor: 'transparent'}}>Rendered on: {Date()}. Todo Id: {this.props.todo.id}</p>\n                </div>\n            </div>\n        )\n    }\n\n}\n\n// Proptypes\nTodoItem.propTypes = {\n    todo: PropTypes.object.isRequired\n}\n\nexport default TodoItem;\n\n","import React, {Component} from 'react';\nimport TodoItem from './TodoItem';\nimport PropTypes from 'prop-types';\n\n/*\nIn this component I want to render out a variable number of TodoItem Components\nThis is done by calling the map function on this.props.todos (passed down as a property from App.js)\nFollowing that I can pass the values from relevant keys from each todo item into the props for TodoItem Component\nI also set the PropTypes to accept an array only.\n*/\nclass Todos extends Component {\n\n    render (){\n        return this.props.todos.map((todo) => \n            <TodoItem todo={todo} deleteTodo={this.props.deleteTodo} key={todo.id} changeTodoStatus={this.props.changeTodoStatus}/>\n        );\n    }\n}\n\n// Proptypes\nTodos.propTypes = {\n    todos: PropTypes.array.isRequired\n}\n\nexport default Todos;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\n// This is a functional component\n// These should be used when only a render is called\nconst linkButton = \"button is-small is-outlined is-link\";\n\nfunction Header () {\n    return (\n        <React.Fragment>\n        <section className=\"navbar\" style={{marginBottom:'1.6rem'}}>\n            <div className=\"content\">\n            <h3>Header Component</h3>\n            <p>Pariatur sureincididunt ad sit consectetur eu ex non exercitation dolor tempor magna. Proident elit adipisicing et eiusmod ut sit ea in cupidatat commodo qui id. Et laborum do irure laboris magna voluptate voluptate culpa sit culpa sit consequat reprehenderit sint. Consectetur eiusmod cupidatat qui sint elit est deserunt dolore non excepteur veniam ex adipisicing commodo. Sunt velit esse duis qui elit voluptate minim aliquip non irure officia aliqua adipisicing.</p>\n            </div>\n            <div className=\"buttons\">\n                <Link className={linkButton} to=\"/\">Visit the Main page</Link>\n                <Link className={linkButton} to=\"/about\">Visit the About page</Link>\n            </div>\n            \n        </section>\n        </React.Fragment>\n    )\n\n}\n\nexport default Header","import React, {Component} from 'react';\n\n\nclass TodoNew extends Component {\n\n\n    state = {\n        title: '',\n        content: ''\n    }\n\n\n    submit = (e) => {\n        e.preventDefault();\n        this.props.todoData(this.state);\n        this.setState({content:'', title: ''})\n        document.getElementById('title_').value = '';\n        document.getElementById('content_').value = '';\n        alert('You have successfully added a new Todo');    }\n    \n\n    // Using e.target.name makes the key dynamic.\n    change = (e) => this.setState({ \n        [e.target.name]: e.target.value });\n\n\n    render () {\n        return (\n            <div>\n            <h3>Form Component</h3>\n            <form onSubmit={this.submit} className=\"form\">\n                <div className=\"field\">\n                    <label className=\"label\">Title</label>\n                    <input id=\"title_\" required onChange={this.change} name=\"title\" className=\"input\"></input>\n                        \n                    <label className=\"label\">Content</label>\n                    <input id=\"content_\" required onChange={this.change} name=\"content\" className=\"input\"></input>\n                </div>\n                <button className=\"button is-primary\" type=\"submit\">Submit</button>\n            </form>\n            </div>\n        )\n\n    }\n}\n\n\nexport default TodoNew;","import React from 'react'\n\nfunction About() {\n    return (\n        <div>\n            <React.Fragment>\n                <h3>\n                    About page.\n                </h3>\n                <p>Proident proident reprehenderit et reprehenderit nisi aute labore voluptate in. Dolor aute enim ea anim culpa elit qui est nisi. Ex pariatur cillum deserunt Lorem mollit ex.</p>  \n            </React.Fragment>\n        </div>\n    )\n}\n\nexport default About;\n","import React, {Component} from 'react';\nimport Todos from './Todos';\nimport Header from './Header';\nimport TodoNew from './TodoNew';\nimport uuid from 'uuid';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport About from './About';\n\n\n/*\n  This is the main App Component\n  Todo and Header Component are brought into this Component\n  State is hard coded in for now\n  Button arrow function is created in App Component so that it can be passed down to children Components\n  In order to pass an argument to a function 'up the tree' you can call bind on the function that is passed \n  down to the child component or 'down the tree'. For example passing the ID for the object up the tree for the buttonFunction() to use\n  setState method is called in order to modify the state of a Component, Component states should never be mutated directly!\n*/\n\nclass App extends Component {\n  \n  state = {\n    todos : [\n      {\n        'id':0,\n        'complete':true,\n        'title':'Labore dolor eiusmod cillum quis.', \n        'content':'Irure pariatur minim tempor laborum magna non duis ex ea Lorem cupidatat irure velit. Est in ipsum excepteur laborum ut exercitation fugiat aliqua elit non dolor fugiat. Dolor eu laboris ex ullamco veniam nulla excepteur sit enim ad dolore consectetur tempor. Id et proident nisi amet laboris voluptate. Fugiat occaecat sunt cillum occaecat ut labore nulla aute excepteur incididunt qui labore mollit. Sit elit tempor ea eiusmod est reprehenderit et occaecat ex aliquip.'\n      },\n      {\n        'id':1, \n        'complete':false,\n        'title':'Sint tempor non eu sint aliquip nulla cupidatat duis sit voluptate cillum.', \n        'content': 'Ad sit laborum aute laborum occaecat incididunt voluptate eu labore sunt adipisicing sit est. Sunt labore elit reprehenderit cupidatat non in elit non. Ut ullamco occaecat pariatur cupidatat cillum sit nisi labore ex id deserunt.'\n      },\n      {\n        'id':2,\n        'complete':true,\n        'title':'Est nisi minim ad sit ipsum aliquip.', \n        'content':'Eiusmod ex duis id veniam officia laborum pariatur et et dolor. Irure fugiat minim minim culpa cillum. Esse tempor consequat sunt excepteur officia consectetur sint excepteur.'\n      },\n      {\n        'id':3,\n        'complete':true,\n        'title':'Incididunt et sint officia tempor mollit sunt commodo. Ea ad in reprehenderit labore. Ad non sunt pariatur aute nulla.', \n        'content':'Eiusmod ex duis id veniam officia laborum pariatur et et dolor. Irure fugiat minim minim culpa cillum. Esse tempor consequat sunt excepteur officia consectetur sint excepteur.'\n      }\n    ]\n  }\n\n  \n  changeTodoStatus = (id) => {\n    this.setState({ todos: this.state.todos.map(todo => {\n        if (todo.id === id) {\n          todo.complete = !todo.complete;\n        }\n        return todo;\n    }) });\n  } \n\n\n  deleteTodo = (id) => {\n    this.setState({ todos: [...this.state.todos.filter(t => t.id !== id)]\n\n    });\n  }\n\n\n  todoData = (data) => {\n\n    console.log(data['title']);\n\n    let newTodo = {\n      'id': uuid.v4(),\n      'complete':false,\n      'title':data['title'],\n      'content':data['content'] }\n\n    this.setState({ todos: [...this.state.todos, newTodo]});\n\n    console.log(this.state.todos);\n  }\n\n\n  render () {\n    return (\n<Router>\n    <div className=\"section\">\n      <div className=\"container\">\n        <div className=\"content\">\n        <Header />\n\n\n        <Route exact path=\"/\" render={props => (\n        <React.Fragment>\n        <TodoNew todoData={this.todoData}/>\n        <h3>Main App Component</h3>\n        <p>Proident qui parismod. Tempor labore ocaboris consectetur cillum eu duis ad laborum dolore. Et elit dolor sit reprehenderit pariatur ut anim voluptate. Tempor pariatur ea consequat culpa voluptate veniam elit non quis id duis veniam eu est. Esse dolore sit et dolore sunt quis sint officia ullamco mollit sunt do velit mollit. Nulla mollit in reprehenderit anim culpa id ipsum commodo ea est adipisicing. Qui Lorem deserunt ullamco proident consequat adipisicing duis ullamco sit reprehenderit irure. Exercitation nulla ex et culpa sunt Lorem labore sunt officia reprehenderit pariatur. Amet dolor reprehenderit ullamco officia aute eecat et.</p>\n        <h3>Rendering Todo Components</h3>\n        <Todos todos={this.state.todos} deleteTodo={this.deleteTodo} changeTodoStatus={this.changeTodoStatus}/>\n        </React.Fragment>  \n        )}/>\n\n        <Route exact path=\"/about\" component={About}/>\n\n        </div>\n      </div>\n    </div>\n</Router>\n    )\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}